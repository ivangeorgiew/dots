{
  inputs,
  lib,
  pkgs,
  username,
  graphicsCard,
  ...
}: {
  services = {
    # Bad naming. Manages all the DE/WM settings, not only X11
    xserver = {
      enable = true;

      displayManager = {
        # Gnome display manager (login)
        gdm.enable = true;

        # disable the default login manager
        lightdm.enable = false;
      };
    };

    # Works only if a display manager is enabled
    displayManager = {
      # whether to autologin
      autoLogin = {
        enable = true;
        user = username;
      };
    };

    # gnome keyring daemon (passwords/credentials)
    gnome.gnome-keyring.enable = true;

    # needed for GNOME services outside of GNOME Desktop
    dbus.packages = with pkgs; [
      gcr
      gnome-settings-daemon
    ];

    # for auto mounting of disks
    gvfs.enable = true;
    udisks2.enable = true;
    devmon.enable = true;

    # file manager thumbnail support for images
    tumbler.enable = true;
  };

  environment = {
    sessionVariables =
      # Generic variables
      {
        ELECTRON_OZONE_PLATFORM_HINT = "auto"; # just in case
        NIXOS_OZONE_WL = "1"; # fix electron apps
        NVD_BACKEND = "direct"; # nvidia-vaapi-driver related
        # CLUTTER_BACKEND = "wayland";
        # GDK_BACKEND = "wayland,x11";
        # QT_AUTO_SCREEN_SCALE_FACTOR = "1";
        # QT_QPA_PLATFORM = "wayland;xcb";
        # QT_WAYLAND_DISABLE_WINDOWDECORATION = "1";
        # SDL_VIDEODRIVER = "wayland"; # might cause issues with older games
        # WLR_DRM_NO_ATOMIC = "1"; # set if you have flickering issue
        # WLR_NO_HARDWARE_CURSORS = "1";
        # XDG_CURRENT_DESKTOP = "Hyprland";
        # XDG_SESSION_DESKTOP = "Hyprland";
        XDG_SESSION_TYPE = "wayland";
        # __GL_GSYNC_ALLOWED = "1";
        # __GL_VRR_ALLOWED = "1";
      }
      # Nvidia related variables
      // lib.optionalAttrs (graphicsCard == "nvidia") {
        # GBM_BACKEND = "nvidia-drm"; # Could crash Firefox
        LIBVA_DRIVER_NAME = "nvidia"; # needed by Hyprland
        __GLX_VENDOR_LIBRARY_NAME = "nvidia"; # needed by Hyprland
      };

    # Desktop related packages
    systemPackages = with pkgs; [
      # CLI apps
      # dunst # notifications
      # grim # screenshots for wayland
      # polkit_gnome # some apps require polkit
      # slurp # needed by `grim`
      # vulkan-tools # to debug issues with vulkan
      # wf-recorder # screen recording
      # wl-clipboard # copy/paste on wayland

      # GUI apps
      # nwg-look # GTK theme changing
      # nwg-icon-picker # GTK icons search
      # playerctl # controls media players
      # rofi-wayland # app launcher for wayland

      # Theme apps
      # kdePackages.qt6ct # QT6 theme changing
      # kdePackages.qtwayland # requirement for qt6
      # libsForQt5.qt5.qtwayland # requirement for qt5
      # libsForQt5.qt5ct # QT5 theme changing
    ];

    # Adds some needed folders in /run/current-system/sw
    # Example: /run/current-system/sw/share/wayland-sessions folder
    # pathsToLink = ["/share"];
  };

  programs = {
    # GUI file manager
    thunar.enable = true;

    # app for gnome-keyring passwords management
    seahorse.enable = true;
  };

  xdg.portal = {
    enable = true;

    # For the `xdg-open` command to use portals
    xdgOpenUsePortal = true;

    # Add extra portals (hyprland portal is auto added)
    extraPortals = with pkgs; [xdg-desktop-portal-gtk];
  };

  # Polkit unit service
  # to start it use `systemctl --user start my-polkit-agent`
  systemd.user.services.my-polkit-agent = {
    description = "starts polkit agent";
    serviceConfig = {
      Type = "simple";
      ExecStart = "${pkgs.polkit_gnome}/libexec/polkit-gnome-authentication-agent-1";
      Restart = "on-failure";
      RestartSec = 1;
      TimeoutStopSec = 10;
    };
  };
}
