snippet rcr "React Container" b
import React, { PureComponent } from 'react'
import { connect } from 'react-redux'
import { bindActionCreators } from 'redux'

class _$1 extends PureComponent {
	render() {
		return (
			<div />$0
		)
	}
}

_$1.propTypes = {
}

export const ${1:`!v expand('%:t:r')`} = connect(
	state => ({
	}),
	dispatch => bindActionCreators({
	}, dispatch)
)(_$1)
endsnippet

snippet rct "React Component" b
import React, { PureComponent } from 'react'

export class ${1:`!v expand('%:t:r')`} extends PureComponent {
	render() {
		return (
			<div />$0
		)
	}
}

$1.propTypes = {
}
endsnippet

snippet cr "constructor" b
constructor(props) {
	super(props)

	$0
}
endsnippet


snippet cwrp "componentWillReceiveProps" b
componentWillReceiveProps(nextProps) {
	$0
}
endsnippet

snippet cdm "componentDidMount" b
componentDidMount() {
	$0
}
endsnippet

snippet cwu "componentWillUnmount" b
componentWillUnmount() {
	$0
}
endsnippet

snippet then "Then" b
this.Then(/^${1}$/, ${2:()} => {
})
endsnippet

snippet when "When" b
this.When(/^${1}$/, ${2:()} => {
})
endsnippet

snippet given "Given" b
this.Given(/^${1}$/, ${2:()} => {
})
endsnippet

snippet wait "browser.waitUntil" b
browser.waitUntil(() => {
	return ${2:browser.isExisting('$0')}
}, TIMEOUT, 'expected ${1:something}')
endsnippet

snippet fn "function"
function $0
endsnippet

snippet cl "console.log"
console.log($0)
endsnippet

snippet worker
function * $1Worker ({ payload: {$2} }) {
	$0
}
endsnippet

snippet watcher
function * $1Watcher() {
	yield factoryTakeLatest($0)
}
endsnippet
